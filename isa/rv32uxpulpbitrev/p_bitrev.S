# See LICENSE for license details.

#*****************************************************************************
# p.bitrev
#-----------------------------------------------------------------------------
#
# Test p.bitrev instruction.
# 
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV32U
RVTEST_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------
  TEST_UIMM5_UIMM5_OP( 2, p.bitrev, 0b00001100110010011010010100100110, 0b11000110010010100101100100110011, 0, 4 )
  TEST_UIMM5_UIMM5_OP( 3, p.bitrev, 0b00001100110001100101101000011001, 0b11000110010010100101100100110011, 1, 4 )
  TEST_UIMM5_UIMM5_OP( 4, p.bitrev, 0b00100001011010110010010001001011, 0b11000110010010100101100100110011, 2, 4 )
  TEST_UIMM5_UIMM5_OP( 5, p.bitrev, 0b01010011000111000011110000011111, 0b11111000001111000011100011001010, 0, 0 )
  TEST_UIMM5_UIMM5_OP( 6, p.bitrev, 0b00100011001011000011110000101111, 0b11111000001111000011100011001010, 1, 0 )
  TEST_UIMM5_UIMM5_OP( 7, p.bitrev, 0b00010110000111000110011000110111, 0b11111000001111000011100011001010, 2, 0 )
  TEST_UIMM5_UIMM5_OP( 8, p.bitrev, 0b00101001100011100001111000001111, 0b11111000001111000011100011001010, 0, 1 )
  TEST_UIMM5_UIMM5_OP( 9, p.bitrev, 0b00010110010011010010110100001111, 0b11111000001111000011100011001010, 1, 1 )
  TEST_UIMM5_UIMM5_OP( 10, p.bitrev, 0b00101100001110001100111000100111, 0b11111000001111000011100011001010, 2, 1 )
  TEST_UIMM5_UIMM5_OP( 11, p.bitrev, 0b00000000000000000000000000000001, 0b11111000001111000011100011001010, 0, 30 )
  TEST_UIMM5_UIMM5_OP( 12, p.bitrev, 0b00000000000000000000000000000010, 0b11111000001111000011100011001010, 1, 30 )
  TEST_UIMM5_UIMM5_OP( 13, p.bitrev, 0b00000000000000000000000000000100, 0b11111000001111000011100011001010, 2, 30 )
  TEST_UIMM5_UIMM5_OP( 14, p.bitrev, 0b00000000000000000000000000000000, 0b11111000001111000011100011001010, 0, 31 )
  TEST_UIMM5_UIMM5_OP( 15, p.bitrev, 0b00000000000000000000000000000000, 0b11111000001111000011100011001010, 1, 31 )
  TEST_UIMM5_UIMM5_OP( 16, p.bitrev, 0b00000000000000000000000000000000, 0b11111000001111000011100011001010, 2, 31 )
  TEST_UIMM5_UIMM5_OP( 17, p.bitrev, 0b00000000000000000000000000001101, 0b11001101010101001001001010000111, 1, 28 )
  TEST_UIMM5_UIMM5_OP( 18, p.bitrev, 0b00000000101010100110110000000101, 0b11110011101000000110110100010101, 2, 8 )
  TEST_UIMM5_UIMM5_OP( 19, p.bitrev, 0b00110000000001110111101100110011, 0b11001100110111101110000000001100, 0, 0 )
  TEST_UIMM5_UIMM5_OP( 20, p.bitrev, 0b00000100001001000111111101101110, 0b01110111001111111010001100000010, 1, 3 )
  TEST_UIMM5_UIMM5_OP( 21, p.bitrev, 0b00000000000000000010101101001111, 0b01000100011011111110001111010000, 1, 15 )
  TEST_UIMM5_UIMM5_OP( 22, p.bitrev, 0b00000000000000000000000001001000, 0b01010001100010100000100100001000, 1, 21 )
  TEST_UIMM5_UIMM5_OP( 23, p.bitrev, 0b00000000000000111100010111100100, 0b01110110100010011110100011110000, 0, 10 )
  TEST_UIMM5_UIMM5_OP( 24, p.bitrev, 0b00000000100111100101011010111001, 0b10110101000111101001110110011110, 2, 9 )
  TEST_UIMM5_UIMM5_OP( 25, p.bitrev, 0b00000000000000000001101111011111, 0b10100000000100111111111101111011, 0, 19 )
  TEST_UIMM5_UIMM5_OP( 26, p.bitrev, 0b00000000101101010101001000111000, 0b00011011000111000100101010101101, 0, 8 )
  

  #-------------------------------------------------------------
  # Source/Destination tests
  #-------------------------------------------------------------
  TEST_UIMM5_UIMM5_SRC1_EQ_DEST( 27, p.bitrev, 0b00000000000000100011100001011100, 0b11111100000100001110100001110001, 0, 14 )
  TEST_UIMM5_UIMM5_SRC1_EQ_DEST( 28, p.bitrev, 0b00000000000000000100100101100110, 0b01100101010000100110100101100100, 2, 17 )
  

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 29, 0, p.bitrev, 0b00001011000001000000111110100101, 0b10101101011110000000100001110000, 1, 1 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 30, 1, p.bitrev, 0b00000000000000011110100000101100, 0b00001111111100011100000101011010, 1, 13 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 31, 2, p.bitrev, 0b00001000101100110000000011101010, 0b11101010110000000011001110001000, 1, 2 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 32, 0, p.bitrev, 0b00000000010100111110110111011001, 0b10100011001101110110111110010100, 0, 7 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 33, 1, p.bitrev, 0b00000000000000000000001000000111, 0b11100100100011000111000000001000, 2, 17 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 34, 2, p.bitrev, 0b00000010100100101001001001011010, 0b00100101011010010010010100100101, 0, 6 )
  
  TEST_UIMM5_UIMM5_DEST_BYPASS( 35, 0, p.bitrev, 0b00000000000000100101011010000011, 0b01011110101010111000010100101011, 1, 15 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 36, 1, p.bitrev, 0b00000000000000000000000010110001, 0b01010100101000000110111000100111, 1, 25 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 37, 2, p.bitrev, 0b00000000000000000000000000001000, 0b00100110100100000011110111100010, 0, 27 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 38, 0, p.bitrev, 0b00000000000000000000000000101011, 0b10110000000000100100000101111101, 1, 27 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 39, 1, p.bitrev, 0b00011100000101011111101101000101, 0b10100010110111111010100000111000, 0, 0 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 40, 2, p.bitrev, 0b00000000101010110001011000101110, 0b00000011011101000110100011010101, 0, 8 )
  
  

  TEST_UIMM5_UIMM5_ZEROSRC1( 41, p.bitrev, 0b00000000000000000000000000000000, 2, 26 )
  TEST_UIMM5_UIMM5_ZEROSRC1( 42, p.bitrev, 0b00000000000000000000000000000000, 2, 19 )
  
  TEST_UIMM5_UIMM5_ZERODEST( 43, p.bitrev, 0b01110000101000101001100101000101, 0, 11 )
  TEST_UIMM5_UIMM5_ZERODEST( 44, p.bitrev, 0b01111111100111111100101101001011, 1, 16 )
  
  

  TEST_PASSFAIL

# Input data section.
RVTEST_CODE_END

  .data

# Output data section.
RVTEST_DATA_BEGIN

  TEST_DATA

RVTEST_DATA_END
