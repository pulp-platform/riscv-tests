# See LICENSE for license details.

#*****************************************************************************
# p.bsetr
#-----------------------------------------------------------------------------
#
# Test p.bsetr instruction.
# 
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV32U
RVTEST_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------
  TEST_RR_OP( 2, p.bsetr, 0b00000000000000000000000000000001, 0b00000000000000000000000000000000, 0x00000000 )
  TEST_RR_OP( 3, p.bsetr, 0b00000000000000000000000000000010, 0b00000000000000000000000000000000, 0x00000001 )
  TEST_RR_OP( 4, p.bsetr, 0b00000000000000000000000000000011, 0b00000000000000000000000000000000, 0x00000020 )
  TEST_RR_OP( 5, p.bsetr, 0b11111111111111111111111111111111, 0b00000000000000000000000000000000, 0x000003e0 )
  TEST_RR_OP( 6, p.bsetr, 0b11111111111111111111111111111110, 0b00000000000000000000000000000000, 0x000003e1 )
  TEST_RR_OP( 7, p.bsetr, 0b10000000000000000000000000000000, 0b00000000000000000000000000000000, 0x0000001f )
  TEST_RR_OP( 8, p.bsetr, 0b11000000000000000000000000000000, 0b00000000000000000000000000000000, 0x000003fe )
  TEST_RR_OP( 9, p.bsetr, 0b10000000000000000000000000000000, 0b00000000000000000000000000000000, 0x000003ff )
  TEST_RR_OP( 10, p.bsetr, 0b00111101100011101101111010110011, 0b00111101100011001101111010110011, 0xba6c2831 )
  TEST_RR_OP( 11, p.bsetr, 0b11001110010111111110101011001010, 0b11001110010110010000101011001010, 0xdade90ad )
  TEST_RR_OP( 12, p.bsetr, 0b11111111111111111100110100001111, 0b10101011011100110000110100001111, 0x0dda76ae )
  TEST_RR_OP( 13, p.bsetr, 0b11111111111111101101111100010001, 0b11100100010111001101111100010001, 0x6f66f791 )
  TEST_RR_OP( 14, p.bsetr, 0b01010111111111111111101111010110, 0b01010100010110011100001111010110, 0xe0c7a9eb )
  TEST_RR_OP( 15, p.bsetr, 0b00001100011111010010010100111010, 0b00001100000001010010010100111010, 0x01aa7073 )
  TEST_RR_OP( 16, p.bsetr, 0b11011100110000110010011001100000, 0b01011100110000110010011001100000, 0x7fdc7abe )
  TEST_RR_OP( 17, p.bsetr, 0b11111101011110001001001000101101, 0b01100101011110001001001000101101, 0x137313bb )
  TEST_RR_OP( 18, p.bsetr, 0b01011000111111001111111111111110, 0b01011000111111001111010010101110, 0xf8a86182 )
  TEST_RR_OP( 19, p.bsetr, 0b00010111011110010010000111101110, 0b00010111011010010010000111101110, 0x01d80c33 )
  

  #-------------------------------------------------------------
  # Source/Destination tests
  #-------------------------------------------------------------
  TEST_RR_SRC1_EQ_DEST( 20, p.bsetr, 0b11011111001111111111111111001101, 0b11011111001001100100001011001101, 0x346df5a8 )
  TEST_RR_SRC1_EQ_DEST( 21, p.bsetr, 0b10100101011100001101000001001101, 0b10100101011100001101000001001101, 0x3c6f9c00 )
  
  TEST_RR_SRC2_EQ_DEST( 22, p.bsetr, 0b01010011111111111111111111111110, 0b01010001110110110011110000011110, 0x37737e85 )
  TEST_RR_SRC2_EQ_DEST( 23, p.bsetr, 0b11111000010101011110111011101000, 0b11111000010101010110111011101000, 0xf7b5c02f )
  
  TEST_RR_SRC12_EQ_DEST( 24, p.bsetr, 0b11010100100111111011100001110001, 0b11010100100111111011100001110001 )
  TEST_RR_SRC12_EQ_DEST( 25, p.bsetr, 0b11111111111110111110101100110100, 0b00000000100010111110101100110100 )
  
  TEST_RR_DEST_BYPASS( 44, 0, p.bsetr, 0b11111111111111111111111010001011, 0b11001110011010011000111010001011, 0xce698e8b )
  TEST_RR_DEST_BYPASS( 45, 1, p.bsetr, 0b11111111111111111111011001101110, 0b10000100100011000011011001101110, 0x848c366e )
  TEST_RR_DEST_BYPASS( 46, 2, p.bsetr, 0b11000010001110001111111111111011, 0b11000010001110000001100110000011, 0xc2381983 )
  TEST_RR_DEST_BYPASS( 47, 0, p.bsetr, 0b11110011011011000101000011111100, 0b00010011011011000101000011111100, 0x136c50fc )
  TEST_RR_DEST_BYPASS( 48, 1, p.bsetr, 0b11111111111111110101010111110000, 0b11011001111001110101010111110000, 0xd9e755f0 )
  TEST_RR_DEST_BYPASS( 49, 2, p.bsetr, 0b10011111111111111111111001101001, 0b10011011010011011000011001101001, 0x9b4d8669 )
  

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------
  TEST_RR_SRC12_BYPASS( 26, 0, 0, p.bsetr, 0b11111111111111111111111001101011, 0b01000000100001010111111001101011, 0x996b064f )
  TEST_RR_SRC12_BYPASS( 27, 0, 1, p.bsetr, 0b11111000100100101000100100100101, 0b00101000100100101000100100100101, 0xb6e70d7c )
  TEST_RR_SRC12_BYPASS( 28, 0, 2, p.bsetr, 0b10000111011100000110000001100010, 0b10000111011100000110000001100010, 0xadd63419 )
  TEST_RR_SRC12_BYPASS( 29, 1, 0, p.bsetr, 0b11111111111111100010010110001011, 0b11000110000001100010010110001011, 0x9e867df1 )
  TEST_RR_SRC12_BYPASS( 30, 1, 1, p.bsetr, 0b11111111111111001011100111010010, 0b10111111100111001011100111010010, 0x2b9eaf15 )
  TEST_RR_SRC12_BYPASS( 31, 1, 2, p.bsetr, 0b11111111110010000111110111001010, 0b00101101110010000111110111001010, 0x0f3ef137 )
  TEST_RR_SRC12_BYPASS( 32, 2, 0, p.bsetr, 0b01001110000111111111111111111011, 0b01001110000110011011001100001011, 0x1cea7e03 )
  TEST_RR_SRC12_BYPASS( 33, 2, 1, p.bsetr, 0b11111111111111110010101111110010, 0b11001110011001110010101111110010, 0xb14b3a30 )
  TEST_RR_SRC12_BYPASS( 34, 2, 2, p.bsetr, 0b11111111111111111111111111100001, 0b00100000011000111001010011100001, 0x09f043e6 )
  TEST_RR_SRC12_BYPASS( 35, 0, 0, p.bsetr, 0b11111111111111111111111111101010, 0b10011011001110100011001100101010, 0x5b7b2345 )
  TEST_RR_SRC12_BYPASS( 36, 0, 1, p.bsetr, 0b01001111111111111111111111110100, 0b01001111110110000100001001010100, 0xa0b14284 )
  TEST_RR_SRC12_BYPASS( 37, 0, 2, p.bsetr, 0b11111111111111111010010011101101, 0b00011011000011101010010011101101, 0x05c52fb0 )
  TEST_RR_SRC12_BYPASS( 38, 1, 0, p.bsetr, 0b11111111111111111111111011110110, 0b11001000101010110000110011110110, 0x8722cfa9 )
  TEST_RR_SRC12_BYPASS( 39, 1, 1, p.bsetr, 0b11111111111111110010101001100101, 0b11010001110111110010101001100101, 0x8e85ea94 )
  TEST_RR_SRC12_BYPASS( 40, 1, 2, p.bsetr, 0b01010100011010110111110000010011, 0b01010100011010110010010000010011, 0xf35c348a )
  TEST_RR_SRC12_BYPASS( 41, 2, 0, p.bsetr, 0b11011111111010011000100111011000, 0b10011111111010011000100111011000, 0x91bff87e )
  TEST_RR_SRC12_BYPASS( 42, 2, 1, p.bsetr, 0b11111111110101110100001000110111, 0b00110101010101110100001000110111, 0xbf9a0e57 )
  TEST_RR_SRC12_BYPASS( 43, 2, 2, p.bsetr, 0b10100001111110101001111111111110, 0b10100001111110101000100101010010, 0xec4ce542 )
  
  

  TEST_RR_ZEROSRC1( 50, p.bsetr, 0b11100000000000000000000000000000, 0xb11b967d )
  TEST_RR_ZEROSRC1( 51, p.bsetr, 0b00000000000000001111111111111100, 0x2886c5a2 )
  
  TEST_RR_ZEROSRC2( 52, p.bsetr, 0b10001010110110110100000001110011, 0b10001010110110110100000001110010 )
  TEST_RR_ZEROSRC2( 53, p.bsetr, 0b10010100000110100111111110010111, 0b10010100000110100111111110010111 )
  
  TEST_RR_ZEROSRC12( 54, p.bsetr, 0b00000000000000000000000000000001 )
  TEST_RR_ZEROSRC12( 55, p.bsetr, 0b00000000000000000000000000000001 )
  
  TEST_RR_ZERODEST( 56, p.bsetr, 0b10001010000100001011100011101100, 0b11111000000001111100100001101110 )
  TEST_RR_ZERODEST( 57, p.bsetr, 0b01101101110101101100110011011000, 0b00111101100110010110100001010100 )
  
  

  TEST_PASSFAIL

# Input data section.
RVTEST_CODE_END

  .data

# Output data section.
RVTEST_DATA_BEGIN

  TEST_DATA

RVTEST_DATA_END
