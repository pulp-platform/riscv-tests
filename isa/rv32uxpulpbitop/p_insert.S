# See LICENSE for license details.

#*****************************************************************************
# p.insert
#-----------------------------------------------------------------------------
#
# Test p.insert instruction.
# 
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV32U
RVTEST_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------
  TEST_RD_UIMM5_UIMM5_OP( 2, p.insert, 0b01010101010101010101010101010100, 0x55555555, 0b11111000001111000011100011001010, 0, 0 )
  TEST_RD_UIMM5_UIMM5_OP( 3, p.insert, 0b01010101010101010101010101010101, 0x55555555, 0b11111000001111000011100011001010, 0, 1 )
  TEST_RD_UIMM5_UIMM5_OP( 4, p.insert, 0b01010101010101010101010101010110, 0x55555555, 0b11111000001111000011100011001010, 1, 0 )
  TEST_RD_UIMM5_UIMM5_OP( 5, p.insert, 0b11111000001111000011100011001010, 0x55555555, 0b11111000001111000011100011001010, 31, 0 )
  TEST_RD_UIMM5_UIMM5_OP( 6, p.insert, 0b11111000001111000011100011001011, 0x55555555, 0b11111000001111000011100011001010, 31, 1 )
  TEST_RD_UIMM5_UIMM5_OP( 7, p.insert, 0b01010101010101010101010101010101, 0x55555555, 0b11111000001111000011100011001010, 0, 31 )
  TEST_RD_UIMM5_UIMM5_OP( 8, p.insert, 0b11010101010101010101010101010101, 0x55555555, 0b11111000001111000011100011001010, 31, 30 )
  TEST_RD_UIMM5_UIMM5_OP( 9, p.insert, 0b11010101010101010101010101010101, 0x55555555, 0b11111000001111000011100011001010, 31, 31 )
  TEST_RD_UIMM5_UIMM5_OP( 10, p.insert, 0b10101100100001000011101110101000, 0xad843ba8, 0b10001100101010100111011111111010, 2, 22 )
  TEST_RD_UIMM5_UIMM5_OP( 11, p.insert, 0b11010111101111011000001100010001, 0x9e173311, 0b11010100000111010111101111011000, 19, 12 )
  TEST_RD_UIMM5_UIMM5_OP( 12, p.insert, 0b01110110110100010011001101100101, 0x76dbd2e5, 0b01111101101000000010001001100110, 12, 7 )
  TEST_RD_UIMM5_UIMM5_OP( 13, p.insert, 0b00101000010011101001111001010001, 0x28449e51, 0b00111011010111010111101101111101, 4, 15 )
  TEST_RD_UIMM5_UIMM5_OP( 14, p.insert, 0b11101011111110111111011011001011, 0x279bf6cb, 0b10010001111010111111010011011100, 23, 20 )
  TEST_RD_UIMM5_UIMM5_OP( 15, p.insert, 0b01110001100111001011001001100101, 0x8f9cb265, 0b11011001001000100111000110110001, 15, 25 )
  TEST_RD_UIMM5_UIMM5_OP( 16, p.insert, 0b01010101100101001011101010010110, 0x558edb96, 0b10000000110100101001010010111010, 15, 8 )
  TEST_RD_UIMM5_UIMM5_OP( 17, p.insert, 0b00001010001110111100101011100010, 0x0bc4cae2, 0b00011111010110001001001000111011, 9, 16 )
  TEST_RD_UIMM5_UIMM5_OP( 18, p.insert, 0b11100110011011010110110110010100, 0xdced6d94, 0b00100110001011110011001111011111, 18, 23 )
  TEST_RD_UIMM5_UIMM5_OP( 19, p.insert, 0b10010001010100110110111000101001, 0xd1536e29, 0b01010111100001101001011110101000, 5, 30 )
  

  #-------------------------------------------------------------
  # Source/Destination tests
  #-------------------------------------------------------------
  TEST_RD_UIMM5_UIMM5_SRC1_EQ_DEST( 20, p.insert, 0b11110000101110011111100001110001, 0b11101001101110011111100001110001, 14, 24 )
  TEST_RD_UIMM5_UIMM5_SRC1_EQ_DEST( 21, p.insert, 0b11101010001011100100000010111001, 0b11101010001011100100000000111001, 2, 7 )
  

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------
  TEST_RD_UIMM5_UIMM5_SRC1_BYPASS( 22, 0, p.insert, 0b10110010011110110011001111000010, 0xb27b33c2, 0b01101101100111101001011001101001, 0, 8 )
  TEST_RD_UIMM5_UIMM5_SRC1_BYPASS( 23, 1, p.insert, 0b10100000100010101011010001011101, 0x908ab45d, 0b01001001100011010000111011001110, 1, 28 )
  TEST_RD_UIMM5_UIMM5_SRC1_BYPASS( 24, 2, p.insert, 0b10101000101111100111101110011000, 0xaabe7b98, 0b00111000001001001010100010111010, 15, 20 )
  TEST_RD_UIMM5_UIMM5_SRC1_BYPASS( 25, 0, p.insert, 0b01010110010101100011001010111101, 0x56563263, 0b11110001100000111001000001011110, 6, 1 )
  TEST_RD_UIMM5_UIMM5_SRC1_BYPASS( 26, 1, p.insert, 0b11111100011101000000010111110100, 0x207405f4, 0b01001011000000100000001101111111, 6, 26 )
  TEST_RD_UIMM5_UIMM5_SRC1_BYPASS( 27, 2, p.insert, 0b10000111010001010011001010110101, 0x87e532b5, 0b10100101111111111100100110111010, 4, 21 )
  
  TEST_RD_UIMM5_UIMM5_DEST_BYPASS( 28, 0, p.insert, 0b11101110000000110110001101100000, 0xee031b60, 0b10011101011001001010011011100011, 6, 8 )
  TEST_RD_UIMM5_UIMM5_DEST_BYPASS( 29, 1, p.insert, 0b01011000000101000001111111110001, 0x44141ff1, 0b01011000010001000000000001011000, 7, 24 )
  TEST_RD_UIMM5_UIMM5_DEST_BYPASS( 30, 2, p.insert, 0b10000010000000110110111000001111, 0x8288a18f, 0b00101011001101000000011011011100, 17, 7 )
  TEST_RD_UIMM5_UIMM5_DEST_BYPASS( 31, 0, p.insert, 0b00110010000101000011101110111000, 0x34543bb8, 0b11010101111110010101010110010000, 7, 21 )
  TEST_RD_UIMM5_UIMM5_DEST_BYPASS( 32, 1, p.insert, 0b10010011100001001101011011100101, 0x9384d6ef, 0b01110001011001100011111010011010, 2, 1 )
  TEST_RD_UIMM5_UIMM5_DEST_BYPASS( 33, 2, p.insert, 0b10101100001001100110000011100101, 0xac2260e5, 0b01110110101011010000000011101001, 4, 18 )
  
  

  TEST_RD_UIMM5_UIMM5_ZEROSRC1( 34, p.insert, 0b11101101000000011101011000100011, 0xed25d623, 4, 18 )
  TEST_RD_UIMM5_UIMM5_ZEROSRC1( 35, p.insert, 0b00000000000010010110000110000101, 0xd8e96185, 30, 20 )
  
  TEST_RD_UIMM5_UIMM5_ZERODEST( 36, p.insert, 0b10000101010100010100110111110011, 19, 18 )
  TEST_RD_UIMM5_UIMM5_ZERODEST( 37, p.insert, 0b00011110110111111100101100111011, 17, 20 )
  
  

  TEST_PASSFAIL

# Input data section.
RVTEST_CODE_END

  .data

# Output data section.
RVTEST_DATA_BEGIN

  TEST_DATA

RVTEST_DATA_END
