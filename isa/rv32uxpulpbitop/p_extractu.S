# See LICENSE for license details.

#*****************************************************************************
# p.extractu
#-----------------------------------------------------------------------------
#
# Test p.extractu instruction.
# 
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV32U
RVTEST_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------
  TEST_UIMM5_UIMM5_OP( 2, p.extractu, 0b00000000000000000000000000000000, 0b11111000001111000011100011001010, 0, 0 )
  TEST_UIMM5_UIMM5_OP( 3, p.extractu, 0b00000000000000000000000000000001, 0b11111000001111000011100011001010, 0, 1 )
  TEST_UIMM5_UIMM5_OP( 4, p.extractu, 0b00000000000000000000000000000010, 0b11111000001111000011100011001010, 1, 0 )
  TEST_UIMM5_UIMM5_OP( 5, p.extractu, 0b11111000001111000011100011001010, 0b11111000001111000011100011001010, 31, 0 )
  TEST_UIMM5_UIMM5_OP( 6, p.extractu, 0b01111100000111100001110001100101, 0b11111000001111000011100011001010, 31, 1 )
  TEST_UIMM5_UIMM5_OP( 7, p.extractu, 0b00000000000000000000000000000001, 0b11111000001111000011100011001010, 0, 31 )
  TEST_UIMM5_UIMM5_OP( 8, p.extractu, 0b00000000000000000000000000000011, 0b11111000001111000011100011001010, 31, 30 )
  TEST_UIMM5_UIMM5_OP( 9, p.extractu, 0b00000000000000000000000000000001, 0b11111000001111000011100011001010, 31, 31 )
  TEST_UIMM5_UIMM5_OP( 10, p.extractu, 0b00000000000000000000000000000110, 0b11001111010010100110110011000010, 2, 12 )
  TEST_UIMM5_UIMM5_OP( 11, p.extractu, 0b00000000000000000000000000000101, 0b11001000001110110001010000110101, 2, 10 )
  TEST_UIMM5_UIMM5_OP( 12, p.extractu, 0b00000000000000000000000000001100, 0b10100001001100100101011001000011, 5, 18 )
  TEST_UIMM5_UIMM5_OP( 13, p.extractu, 0b00000000000000000000000000000000, 0b11110010100001101100011011010000, 0, 2 )
  TEST_UIMM5_UIMM5_OP( 14, p.extractu, 0b00000000000000000000000100001010, 0b01000001111000110000101010111111, 8, 8 )
  TEST_UIMM5_UIMM5_OP( 15, p.extractu, 0b00000000000000000000000000000011, 0b01110101000100010011101010111110, 1, 2 )
  TEST_UIMM5_UIMM5_OP( 16, p.extractu, 0b00000000000000000000000000010111, 0b01100100001110010111001110000011, 6, 12 )
  TEST_UIMM5_UIMM5_OP( 17, p.extractu, 0b00000000000000001011000101001010, 0b10110001010010101001011001101101, 18, 16 )
  TEST_UIMM5_UIMM5_OP( 18, p.extractu, 0b00000000000000000000000000000000, 0b00100111001011001001010101100101, 0, 20 )
  TEST_UIMM5_UIMM5_OP( 19, p.extractu, 0b00000000000000000001101010101001, 0b11010101010011110000101110011101, 28, 19 )
  

  #-------------------------------------------------------------
  # Source/Destination tests
  #-------------------------------------------------------------
  TEST_UIMM5_UIMM5_SRC1_EQ_DEST( 20, p.extractu, 0b00000000000000001100000001001010, 0b01100000001001010101110100101001, 30, 15 )
  TEST_UIMM5_UIMM5_SRC1_EQ_DEST( 21, p.extractu, 0b00000000000000000000000000000001, 0b11111010010000011100111001011001, 15, 31 )
  

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 22, 0, p.extractu, 0b00000000000000000000000000000110, 0b00110001010011100001100110010100, 25, 27 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 23, 1, p.extractu, 0b00000000000000000000000000000001, 0b10110010011110101110100100001011, 30, 31 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 24, 2, p.extractu, 0b00000000011010010110100100100110, 0b10011010010110100100100110100000, 23, 6 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 25, 0, p.extractu, 0b00000000000000011101010001011111, 0b00011101010001011111101110000001, 17, 12 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 26, 1, p.extractu, 0b00000000000000000000000000100011, 0b01000110101001011111111110111001, 8, 25 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 27, 2, p.extractu, 0b00000000000000000000000000001011, 0b11111011101100111011000111011000, 3, 12 )
  
  TEST_UIMM5_UIMM5_DEST_BYPASS( 28, 0, p.extractu, 0b00000000000000000000001110110010, 0b10100001011110101011110110010111, 9, 3 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 29, 1, p.extractu, 0b00000000110101110000010001110101, 0b00011010111000001000111010111010, 25, 5 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 30, 2, p.extractu, 0b00000000000000011000000000000110, 0b00011000000000000110100011010111, 19, 12 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 31, 0, p.extractu, 0b00000000000000011111101011011010, 0b11111101011011010101100101101100, 31, 15 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 32, 1, p.extractu, 0b00000000000000100000000011111010, 0b10100111101000000000111110100101, 17, 4 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 33, 2, p.extractu, 0b00000000000000000000000000001010, 0b00001010001101001000101110011100, 27, 24 )
  
  

  TEST_UIMM5_UIMM5_ZEROSRC1( 34, p.extractu, 0b00000000000000000000000000000000, 20, 25 )
  TEST_UIMM5_UIMM5_ZEROSRC1( 35, p.extractu, 0b00000000000000000000000000000000, 10, 19 )
  
  TEST_UIMM5_UIMM5_ZERODEST( 36, p.extractu, 0b01001110001000000100110100001000, 2, 16 )
  TEST_UIMM5_UIMM5_ZERODEST( 37, p.extractu, 0b01111000000100101100101011100010, 4, 17 )
  
  

  TEST_PASSFAIL

# Input data section.
RVTEST_CODE_END

  .data

# Output data section.
RVTEST_DATA_BEGIN

  TEST_DATA

RVTEST_DATA_END
