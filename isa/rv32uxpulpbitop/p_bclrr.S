# See LICENSE for license details.

#*****************************************************************************
# p.bclrr
#-----------------------------------------------------------------------------
#
# Test p.bclrr instruction.
# 
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV32U
RVTEST_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------
  TEST_RR_OP( 2, p.bclrr, 0b11111111111111111111111111111110, 0b11111111111111111111111111111111, 0x00000000 )
  TEST_RR_OP( 3, p.bclrr, 0b11111111111111111111111111111101, 0b11111111111111111111111111111111, 0x00000001 )
  TEST_RR_OP( 4, p.bclrr, 0b11111111111111111111111111111100, 0b11111111111111111111111111111111, 0x00000020 )
  TEST_RR_OP( 5, p.bclrr, 0b00000000000000000000000000000000, 0b11111111111111111111111111111111, 0x000003e0 )
  TEST_RR_OP( 6, p.bclrr, 0b00000000000000000000000000000001, 0b11111111111111111111111111111111, 0x000003e1 )
  TEST_RR_OP( 7, p.bclrr, 0b01111111111111111111111111111111, 0b11111111111111111111111111111111, 0x0000001f )
  TEST_RR_OP( 8, p.bclrr, 0b00111111111111111111111111111111, 0b11111111111111111111111111111111, 0x000003fe )
  TEST_RR_OP( 9, p.bclrr, 0b01111111111111111111111111111111, 0b11111111111111111111111111111111, 0x000003ff )
  TEST_RR_OP( 10, p.bclrr, 0b00001011011001001101000000000011, 0b00001011011001001101011001101111, 0xeccb9d22 )
  TEST_RR_OP( 11, p.bclrr, 0b10000011101000111110000001010110, 0b10000011101000111110000001010110, 0x5140a005 )
  TEST_RR_OP( 12, p.bclrr, 0b00000001000001100101011110001111, 0b01100101000001100101011110001111, 0xe111adf9 )
  TEST_RR_OP( 13, p.bclrr, 0b00110100000000001000010101011101, 0b00110100000110101000010101011101, 0x264fccb0 )
  TEST_RR_OP( 14, p.bclrr, 0b00000000110000111101100110001001, 0b01000000110000111101100110001001, 0x9524c938 )
  TEST_RR_OP( 15, p.bclrr, 0b00010101111111010000000000000001, 0b00010101111111011010111111100101, 0x687479c1 )
  TEST_RR_OP( 16, p.bclrr, 0b00000000111011110110000011000101, 0b01011011111011110110000011000101, 0x141618d8 )
  TEST_RR_OP( 17, p.bclrr, 0b00000001110010011101000011001110, 0b01110001110010011101000011001110, 0x3bf727b9 )
  TEST_RR_OP( 18, p.bclrr, 0b00000000000000000000101111101101, 0b10001001101101010001101111101101, 0x4389d30c )
  TEST_RR_OP( 19, p.bclrr, 0b01100000000010000101011110100001, 0b01110100111010000101011110100001, 0x6b20a4f5 )
  

  #-------------------------------------------------------------
  # Source/Destination tests
  #-------------------------------------------------------------
  TEST_RR_SRC1_EQ_DEST( 20, p.bclrr, 0b11001101100000000000110001111010, 0b11001101111000010001110001111010, 0x04264d4c )
  TEST_RR_SRC1_EQ_DEST( 21, p.bclrr, 0b11100000000000000000000000001110, 0b11110100111000101000011111001110, 0x79687ac6 )
  
  TEST_RR_SRC2_EQ_DEST( 22, p.bclrr, 0b11010100000000000100010001100011, 0b11010110110101000100010001100011, 0x0a1ff4f2 )
  TEST_RR_SRC2_EQ_DEST( 23, p.bclrr, 0b00000000000000001010011010111110, 0b10100010101000101010011010111110, 0x0a34ba71 )
  
  TEST_RR_SRC12_EQ_DEST( 24, p.bclrr, 0b01000011010000000001010011101101, 0b01000011010100010001010011101101 )
  TEST_RR_SRC12_EQ_DEST( 25, p.bclrr, 0b00000000000000111010111011010010, 0b10101111100011111010111011010010 )
  
  TEST_RR_DEST_BYPASS( 44, 0, p.bclrr, 0b00000000000000000000000001000111, 0b00100010101101100000101101000111, 0x22b60b47 )
  TEST_RR_DEST_BYPASS( 45, 1, p.bclrr, 0b10100000000101111010110010110111, 0b10111001000101111010110010110111, 0xb917acb7 )
  TEST_RR_DEST_BYPASS( 46, 2, p.bclrr, 0b10010000100000000000000000000100, 0b10010000100101010001101000000100, 0x90951a04 )
  TEST_RR_DEST_BYPASS( 47, 0, p.bclrr, 0b00000000000000000000011011001011, 0b00001011110101011110111011001011, 0x0bd5eecb )
  TEST_RR_DEST_BYPASS( 48, 1, p.bclrr, 0b00000000000010111001111000110100, 0b00110011100110111001111000110100, 0x339b9e34 )
  TEST_RR_DEST_BYPASS( 49, 2, p.bclrr, 0b10100000000000001100010110010000, 0b10111101010000101100010110010000, 0xbd42c590 )
  

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------
  TEST_RR_SRC12_BYPASS( 26, 0, 0, p.bclrr, 0b00111000000000000000000000000001, 0b00111000010001111100010111010011, 0x440c1301 )
  TEST_RR_SRC12_BYPASS( 27, 0, 1, p.bclrr, 0b00000000000000000000100001111000, 0b11111100011011110111100001111000, 0xf612aa6c )
  TEST_RR_SRC12_BYPASS( 28, 0, 2, p.bclrr, 0b00000000000000000000000000111110, 0b11011000100110101101001000111110, 0xd4501768 )
  TEST_RR_SRC12_BYPASS( 29, 1, 0, p.bclrr, 0b01110011110100000001011001111100, 0b01110011110101001101011001111100, 0xd4e36ccd )
  TEST_RR_SRC12_BYPASS( 30, 1, 1, p.bclrr, 0b10010001111000110111011110010101, 0b11010001111000110111011110010101, 0x221ba01e )
  TEST_RR_SRC12_BYPASS( 31, 1, 2, p.bclrr, 0b00000000000000000000000011010010, 0b11111101001110001011000011010010, 0xd16967ab )
  TEST_RR_SRC12_BYPASS( 32, 2, 0, p.bclrr, 0b00000000011011110011110110111101, 0b01110010011011110011110110111101, 0xc70967b9 )
  TEST_RR_SRC12_BYPASS( 33, 2, 1, p.bclrr, 0b00000000000001011001011101110011, 0b11011001011111011001011101110011, 0x7e1e0213 )
  TEST_RR_SRC12_BYPASS( 34, 2, 2, p.bclrr, 0b00000000010010010110111010101110, 0b01111100110010010110111010101110, 0x49560a17 )
  TEST_RR_SRC12_BYPASS( 35, 0, 0, p.bclrr, 0b00000000000000000010100001100011, 0b11000101001101000010100001100011, 0x88c73371 )
  TEST_RR_SRC12_BYPASS( 36, 0, 1, p.bclrr, 0b00111001011110100000000000000110, 0b00111001011110101000001010100110, 0xc5ef1d84 )
  TEST_RR_SRC12_BYPASS( 37, 0, 2, p.bclrr, 0b00000000000000000000000011100100, 0b11000000011111111100100011100100, 0x13a987c9 )
  TEST_RR_SRC12_BYPASS( 38, 1, 0, p.bclrr, 0b00011111010001101010000000011001, 0b00011111010001101010000001111001, 0xcfe19025 )
  TEST_RR_SRC12_BYPASS( 39, 1, 1, p.bclrr, 0b00000000000000000000000010110000, 0b10110110011001111011011010110000, 0xd92d4be9 )
  TEST_RR_SRC12_BYPASS( 40, 1, 2, p.bclrr, 0b10011111010101100000000000110011, 0b10011111010101100100100000110011, 0xbbeb24e9 )
  TEST_RR_SRC12_BYPASS( 41, 2, 0, p.bclrr, 0b11101011110000000100101111000111, 0b11101011110000000100101111001111, 0x118a6043 )
  TEST_RR_SRC12_BYPASS( 42, 2, 1, p.bclrr, 0b00000000000000010110101110010100, 0b10110010001011010110101110010100, 0xa6d45f51 )
  TEST_RR_SRC12_BYPASS( 43, 2, 2, p.bclrr, 0b00000010111110000100101101011010, 0b00000010111110000100101101011010, 0x1edf182f )
  
  

  TEST_RR_ZEROSRC1( 50, p.bclrr, 0b00000000000000000000000000000000, 0xa8daa18a )
  TEST_RR_ZEROSRC1( 51, p.bclrr, 0b00000000000000000000000000000000, 0x5cc29659 )
  
  TEST_RR_ZEROSRC2( 52, p.bclrr, 0b11111010101111110011111101100110, 0b11111010101111110011111101100111 )
  TEST_RR_ZEROSRC2( 53, p.bclrr, 0b01010010111011010000100110010110, 0b01010010111011010000100110010110 )
  
  TEST_RR_ZEROSRC12( 54, p.bclrr, 0b00000000000000000000000000000000 )
  TEST_RR_ZEROSRC12( 55, p.bclrr, 0b00000000000000000000000000000000 )
  
  TEST_RR_ZERODEST( 56, p.bclrr, 0b10011101100010110111101010111100, 0b11100101110110100101110101010100 )
  TEST_RR_ZERODEST( 57, p.bclrr, 0b01010111111100011011000011011100, 0b10110110001100011011001001010101 )
  
  

  TEST_PASSFAIL

# Input data section.
RVTEST_CODE_END

  .data

# Output data section.
RVTEST_DATA_BEGIN

  TEST_DATA

RVTEST_DATA_END
