# See LICENSE for license details.

#*****************************************************************************
# p.extract
#-----------------------------------------------------------------------------
#
# Test p.extract instruction.
# 
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV32U
RVTEST_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------
  TEST_UIMM5_UIMM5_OP( 2, p.extract, 0b00000000000000000000000000000000, 0b11111000001111000011100011001010, 0, 0 )
  TEST_UIMM5_UIMM5_OP( 3, p.extract, 0b11111111111111111111111111111111, 0b11111000001111000011100011001010, 0, 1 )
  TEST_UIMM5_UIMM5_OP( 4, p.extract, 0b11111111111111111111111111111110, 0b11111000001111000011100011001010, 1, 0 )
  TEST_UIMM5_UIMM5_OP( 5, p.extract, 0b11111000001111000011100011001010, 0b11111000001111000011100011001010, 31, 0 )
  TEST_UIMM5_UIMM5_OP( 6, p.extract, 0b11111100000111100001110001100101, 0b11111000001111000011100011001010, 31, 1 )
  TEST_UIMM5_UIMM5_OP( 7, p.extract, 0b11111111111111111111111111111111, 0b11111000001111000011100011001010, 0, 31 )
  TEST_UIMM5_UIMM5_OP( 8, p.extract, 0b11111111111111111111111111111111, 0b11111000001111000011100011001010, 31, 30 )
  TEST_UIMM5_UIMM5_OP( 9, p.extract, 0b11111111111111111111111111111111, 0b11111000001111000011100011001010, 31, 31 )
  TEST_UIMM5_UIMM5_OP( 10, p.extract, 0b00000000000000000000000000000101, 0b00111111010100101101110111001010, 4, 1 )
  TEST_UIMM5_UIMM5_OP( 11, p.extract, 0b00000000000000000000000000010000, 0b00100001100000010110000011100001, 27, 25 )
  TEST_UIMM5_UIMM5_OP( 12, p.extract, 0b11111111111111111111111111110001, 0b10000010110100110111001100010010, 5, 4 )
  TEST_UIMM5_UIMM5_OP( 13, p.extract, 0b11111111111111111111111111101001, 0b01100101010001111010011010011010, 7, 10 )
  TEST_UIMM5_UIMM5_OP( 14, p.extract, 0b11111111111111111111111111000110, 0b11110001101110000111111000101000, 16, 22 )
  TEST_UIMM5_UIMM5_OP( 15, p.extract, 0b11111111111111111111111110101011, 0b00000101101010101100001110111101, 7, 14 )
  TEST_UIMM5_UIMM5_OP( 16, p.extract, 0b00000000000000000000000001110000, 0b01110000010001010110000101000010, 20, 24 )
  TEST_UIMM5_UIMM5_OP( 17, p.extract, 0b11111111111001101100100001001110, 0b10011011001000010011100111001101, 29, 10 )
  TEST_UIMM5_UIMM5_OP( 18, p.extract, 0b00000000000000000000001010010110, 0b01010010110010110110001111011110, 28, 21 )
  TEST_UIMM5_UIMM5_OP( 19, p.extract, 0b11111111111111111000011110111100, 0b10000111101111001111100000101001, 31, 16 )
  

  #-------------------------------------------------------------
  # Source/Destination tests
  #-------------------------------------------------------------
  TEST_UIMM5_UIMM5_SRC1_EQ_DEST( 20, p.extract, 0b11111111111111111111111111101101, 0b00110110101101001010010110100010, 5, 18 )
  TEST_UIMM5_UIMM5_SRC1_EQ_DEST( 21, p.extract, 0b11111111111111111110001001100011, 0b10001001100011100101111011101111, 24, 18 )
  

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 22, 0, p.extract, 0b00100110010000111110001101111000, 0b01001100100001111100011011110001, 31, 1 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 23, 1, p.extract, 0b11111111111111111111110010100010, 0b10010100010010001110111111110110, 13, 21 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 24, 2, p.extract, 0b11111111111110110111110000110110, 0b11011111101101111100001101101001, 19, 4 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 25, 0, p.extract, 0b11111111111111111110100000111100, 0b01010000110100000111100000001100, 14, 9 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 26, 1, p.extract, 0b00000000000000000000000000110011, 0b10011000010001110110000001100110, 10, 1 )
  TEST_UIMM5_UIMM5_SRC1_BYPASS( 27, 2, p.extract, 0b00000000000000000000000000000000, 0b00000000000101111101010101000110, 0, 7 )
  
  TEST_UIMM5_UIMM5_DEST_BYPASS( 28, 0, p.extract, 0b11111111110110111011111100101101, 0b11011011101111110010110110100101, 22, 8 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 29, 1, p.extract, 0b11111111111111111111111110000110, 0b11111111110100010000110101100101, 7, 9 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 30, 2, p.extract, 0b00000000000000000000001111010101, 0b01111010101010100111011100111010, 20, 21 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 31, 0, p.extract, 0b00000000000000001101110110101100, 0b00110111001101110110101100011001, 17, 6 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 32, 1, p.extract, 0b00000000000000000000000111000101, 0b01110001010011000001000001111111, 31, 22 )
  TEST_UIMM5_UIMM5_DEST_BYPASS( 33, 2, p.extract, 0b00000000000000000000001011100000, 0b00101110000011101010100110011000, 21, 20 )
  
  

  TEST_UIMM5_UIMM5_ZEROSRC1( 34, p.extract, 0b00000000000000000000000000000000, 0, 12 )
  TEST_UIMM5_UIMM5_ZEROSRC1( 35, p.extract, 0b00000000000000000000000000000000, 21, 22 )
  
  TEST_UIMM5_UIMM5_ZERODEST( 36, p.extract, 0b11100100110101010110011101101100, 9, 18 )
  TEST_UIMM5_UIMM5_ZERODEST( 37, p.extract, 0b11011110111000010010000011110001, 18, 6 )
  
  

  TEST_PASSFAIL

# Input data section.
RVTEST_CODE_END

  .data

# Output data section.
RVTEST_DATA_BEGIN

  TEST_DATA

RVTEST_DATA_END
