# See LICENSE for license details.

#*****************************************************************************
# p.insertr
#-----------------------------------------------------------------------------
#
# Test p.insertr instruction.
# 
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV32U
RVTEST_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------
  TEST_RRR_OP( 2, p.insertr, 0b01010101010101010101010101010100, 0b11111000001111000011100011001010, 0x00000000, 0x55555555 )
  TEST_RRR_OP( 3, p.insertr, 0b01010101010101010101010101010101, 0b11111000001111000011100011001010, 0x00000001, 0x55555555 )
  TEST_RRR_OP( 4, p.insertr, 0b01010101010101010101010101010110, 0b11111000001111000011100011001010, 0x00000020, 0x55555555 )
  TEST_RRR_OP( 5, p.insertr, 0b11111000001111000011100011001010, 0b11111000001111000011100011001010, 0x000003e0, 0x55555555 )
  TEST_RRR_OP( 6, p.insertr, 0b11111000001111000011100011001011, 0b11111000001111000011100011001010, 0x000003e1, 0x55555555 )
  TEST_RRR_OP( 7, p.insertr, 0b01010101010101010101010101010101, 0b11111000001111000011100011001010, 0x0000001f, 0x55555555 )
  TEST_RRR_OP( 8, p.insertr, 0b11010101010101010101010101010101, 0b11111000001111000011100011001010, 0x000003fe, 0x55555555 )
  TEST_RRR_OP( 9, p.insertr, 0b11010101010101010101010101010101, 0b11111000001111000011100011001010, 0x000003ff, 0x55555555 )
  TEST_RRR_OP( 10, p.insertr, 0b10010111001110011001101010000110, 0b01011001101110010111001110010011, 0x0e927670, 0xa1e09a86 )
  TEST_RRR_OP( 11, p.insertr, 0b01011011101001100101100101110010, 0b00001010001011011101001000010110, 0x88fdfad3, 0x7b465972 )
  TEST_RRR_OP( 12, p.insertr, 0b10100001111011001011110100000001, 0b01111010100101000011110110011011, 0xe7649690, 0xfa65bd01 )
  TEST_RRR_OP( 13, p.insertr, 0b01011001110110001011101011011110, 0b11110101101010001010011101110111, 0xeea9b841, 0x59d8bad0 )
  TEST_RRR_OP( 14, p.insertr, 0b10001111010010011000101111001001, 0b10010011000011100000011011001001, 0x0f453cb0, 0x8f428bc9 )
  TEST_RRR_OP( 15, p.insertr, 0b00100100100111111100000111000111, 0b01001001100011111001010000010000, 0x60b00d1e, 0x649fc1c7 )
  TEST_RRR_OP( 16, p.insertr, 0b00000111110000100110001000001110, 0b11100110011010110010000000111000, 0x6f80b007, 0x07c2620e )
  TEST_RRR_OP( 17, p.insertr, 0b01110111000100101011111100001001, 0b01101110111001111100101101111000, 0x92dcab96, 0x8c12bf09 )
  TEST_RRR_OP( 18, p.insertr, 0b10101011110010000111000000101110, 0b00001011110010000111000000101110, 0xc53fdf80, 0xbe321631 )
  TEST_RRR_OP( 19, p.insertr, 0b00101101110010001110001010101111, 0b10011010111011110000011111010111, 0x9bb0f42d, 0x2dc8c2af )
  

  #-------------------------------------------------------------
  # Source/Destination tests
  #-------------------------------------------------------------
  TEST_RRR_SRC1_EQ_DEST( 20, p.insertr, 0b00111110010100001110110000100111, 0b00110110010100001110110000100111, 0x1fe9b459 )
  TEST_RRR_SRC1_EQ_DEST( 21, p.insertr, 0b00100100010111011100100010111011, 0b00001010000010101100100010111011, 0x7972a9cf )
  
  TEST_RRR_SRC2_EQ_DEST( 22, p.insertr, 0b00111000110010011110111101001001, 0b00001001110001100100111101111011, 0xc9562749 )
  TEST_RRR_SRC2_EQ_DEST( 23, p.insertr, 0b10111100000101000100000100111001, 0b10100111000101111100011011110000, 0x0c144139 )
  
  TEST_RRR_SRC12_EQ_DEST( 24, p.insertr, 0b10001010101001100010001000111010, 0b10110010101001100010001000111010 )
  TEST_RRR_SRC12_EQ_DEST( 25, p.insertr, 0b00001010001000111110000100010001, 0b00001011100001111110000100010001 )
  
  TEST_RRR_DEST_BYPASS( 44, 0, p.insertr, 0b11001100010010001010001011110001, 0b01101000111100110011000100100101, 0x0430ca31, 0x41eea2f1 )
  TEST_RRR_DEST_BYPASS( 45, 1, p.insertr, 0b01111110001011100110111101001000, 0b11100011101100011111011100110111, 0x3c313569, 0x7e3d5548 )
  TEST_RRR_DEST_BYPASS( 46, 2, p.insertr, 0b10111001001110010011011010101111, 0b01011101000010111001011110110010, 0x3cf20277, 0x513936af )
  TEST_RRR_DEST_BYPASS( 47, 0, p.insertr, 0b10111000001101111101110001110101, 0b11111101010010101100100101111010, 0xe55410a1, 0xb837dc61 )
  TEST_RRR_DEST_BYPASS( 48, 1, p.insertr, 0b01110010100111001101010000110110, 0b10111001010011100110101000011011, 0xfd4fbfa1, 0x7e67abac )
  TEST_RRR_DEST_BYPASS( 49, 2, p.insertr, 0b00011010010100011110110001110100, 0b00111001101011010010100011110110, 0x84a00a69, 0x12f5d074 )
  TEST_RRR_SRC3_BYPASS( 50, 0, p.insertr, 0b01011100010011000010111001010111, 0b11000010011001010101110001001100, 0x1f66c5f0, 0xffcb2e57 )
  TEST_RRR_SRC3_BYPASS( 51, 1, p.insertr, 0b11101010010100000001010001110000, 0b01011001010101100011101010010101, 0x435ca9ba, 0xa2501470 )
  TEST_RRR_SRC3_BYPASS( 52, 2, p.insertr, 0b01001010001000001101111110010011, 0b00101101101011011001000100110101, 0x2f01293c, 0x8a20df93 )
  TEST_RRR_SRC3_BYPASS( 53, 0, p.insertr, 0b11110000110100101011011011011011, 0b00111110000100110010110100001101, 0xdad0a08a, 0xf0d29adb )
  TEST_RRR_SRC3_BYPASS( 54, 1, p.insertr, 0b11000000000001111001110101010111, 0b10110110001010010110111000000010, 0xbd748d57, 0x25079d57 )
  TEST_RRR_SRC3_BYPASS( 55, 2, p.insertr, 0b01001010011001000011111001001000, 0b10110100001101001110010010111011, 0x99ec067c, 0x7a643e48 )
  

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------
  TEST_RRR_SRC12_BYPASS( 26, 0, 0, p.insertr, 0b11001111010101011111110101000011, 0b11001100100101100111101010101011, 0x8df64251, 0xc161fd43 )
  TEST_RRR_SRC12_BYPASS( 27, 0, 1, p.insertr, 0b10001011110111100000000100001110, 0b01100000010111110111001000111110, 0xcce7f040, 0x8bde010b )
  TEST_RRR_SRC12_BYPASS( 28, 0, 2, p.insertr, 0b11110110001100000011111110111110, 0b01010110101111011100111101101100, 0xc7c54cd7, 0xd4303fbe )
  TEST_RRR_SRC12_BYPASS( 29, 1, 0, p.insertr, 0b01010000111000111011101110000110, 0b01010100001110001110110011011110, 0xff566bac, 0xda617b86 )
  TEST_RRR_SRC12_BYPASS( 30, 1, 1, p.insertr, 0b11110101011111111111111111111110, 0b01111001100111111110100100111010, 0x988f4e5c, 0x057ffffe )
  TEST_RRR_SRC12_BYPASS( 31, 1, 2, p.insertr, 0b11011110011100100000001001010100, 0b00010001101010100101001100001000, 0xfb2fb82c, 0xde722254 )
  TEST_RRR_SRC12_BYPASS( 32, 2, 0, p.insertr, 0b10111011011010101101101011010111, 0b01101011010010001010110110101101, 0xd7374d84, 0xbb6b53f7 )
  TEST_RRR_SRC12_BYPASS( 33, 2, 1, p.insertr, 0b00001111001100100101111011001010, 0b01000000111100110010010111011111, 0xe3812f6a, 0x7671caca )
  TEST_RRR_SRC12_BYPASS( 34, 2, 2, p.insertr, 0b01100110011011011010100111101111, 0b00011000111010101100011001111101, 0x4684d61e, 0x666da9ef )
  TEST_RRR_SRC12_BYPASS( 35, 0, 0, p.insertr, 0b11001000111111011011101010011101, 0b00110111010110010011111100011111, 0x7b38ad3d, 0xa8fdba9d )
  TEST_RRR_SRC12_BYPASS( 36, 0, 1, p.insertr, 0b10000110110111101001001110010101, 0b11110001010011111001111010010011, 0x59180da8, 0x86f2a895 )
  TEST_RRR_SRC12_BYPASS( 37, 0, 2, p.insertr, 0b01000000111100011001000001001100, 0b11000110100111111101000000111111, 0x52ca75b5, 0x3011904c )
  TEST_RRR_SRC12_BYPASS( 38, 1, 0, p.insertr, 0b10100110011110100110100101110110, 0b11111100001010111100001011001110, 0x4a72683e, 0xe67a6976 )
  TEST_RRR_SRC12_BYPASS( 39, 1, 1, p.insertr, 0b00111100011101000101001011111010, 0b10101100011101100111011111001010, 0x147f6cab, 0x3c7422fa )
  TEST_RRR_SRC12_BYPASS( 40, 1, 2, p.insertr, 0b00101001110101110010101100011011, 0b00010101000010100111010111011010, 0x17d676af, 0x63832b1b )
  TEST_RRR_SRC12_BYPASS( 41, 2, 0, p.insertr, 0b00110110110010001110100000101010, 0b01111001101101100100011101000010, 0x82dbab48, 0x4a86932a )
  TEST_RRR_SRC12_BYPASS( 42, 2, 1, p.insertr, 0b01011000110110011001111110001100, 0b00011100110110011011001100111111, 0xcac80247, 0x5928088c )
  TEST_RRR_SRC12_BYPASS( 43, 2, 2, p.insertr, 0b11101000001101110001000000111110, 0b00001111010001000001101110001000, 0x12e3c9a9, 0xe873823e )
  
  

  TEST_RRR_ZEROSRC1( 56, p.insertr, 0b11011000000000000010110100001000, 0x1d8ed18e, 0xd8546d08 )
  TEST_RRR_ZEROSRC1( 57, p.insertr, 0b00000000000000000000010001111101, 0x240457cb, 0xd227047d )
  
  TEST_RRR_ZEROSRC2( 58, p.insertr, 0b10011100010101000001111001010000, 0b10001101110101100000111000001110, 0x9c541e50 )
  TEST_RRR_ZEROSRC2( 59, p.insertr, 0b00110010101010011111110100000100, 0b10111110101010001111111001001000, 0x32a9fd04 )
  
  TEST_RRR_ZEROSRC3( 60, p.insertr, 0b00000100010100001101101101000000, 0b01111000110100010100001101101101, 0x8bd8ba86 )
  TEST_RRR_ZEROSRC3( 61, p.insertr, 0b00000000000001000000000000000000, 0b10100011011110110110011000001001, 0x4c8be412 )
  
  TEST_RRR_ZEROSRC12( 62, p.insertr, 0b00101101011001111000100011000000, 0x2d6788c1 )
  TEST_RRR_ZEROSRC12( 63, p.insertr, 0b10110111111110100110001111001010, 0xb7fa63cb )
  
  TEST_RRR_ZEROSRC123( 64, p.insertr, 0b00000000000000000000000000000000 )
  TEST_RRR_ZEROSRC123( 65, p.insertr, 0b00000000000000000000000000000000 )
  
  TEST_RRR_ZERODEST( 66, p.insertr, 0b10000110001000100100111100111101, 0x33029cf3 )
  TEST_RRR_ZERODEST( 67, p.insertr, 0b11110011100100000001101100110101, 0xf3018109 )
  
  

  TEST_PASSFAIL

# Input data section.
RVTEST_CODE_END

  .data

# Output data section.
RVTEST_DATA_BEGIN

  TEST_DATA

RVTEST_DATA_END
