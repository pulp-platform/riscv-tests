# See LICENSE for license details.

#*****************************************************************************
# p.extractur
#-----------------------------------------------------------------------------
#
# Test p.extractur instruction.
# 
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV32U
RVTEST_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------
  TEST_RR_OP( 2, p.extractur, 0b00000000000000000000000000000000, 0b11111000001111000011100011001010, 0x00000000 )
  TEST_RR_OP( 3, p.extractur, 0b00000000000000000000000000000001, 0b11111000001111000011100011001010, 0x00000001 )
  TEST_RR_OP( 4, p.extractur, 0b00000000000000000000000000000010, 0b11111000001111000011100011001010, 0x00000020 )
  TEST_RR_OP( 5, p.extractur, 0b11111000001111000011100011001010, 0b11111000001111000011100011001010, 0x000003e0 )
  TEST_RR_OP( 6, p.extractur, 0b01111100000111100001110001100101, 0b11111000001111000011100011001010, 0x000003e1 )
  TEST_RR_OP( 7, p.extractur, 0b00000000000000000000000000000001, 0b11111000001111000011100011001010, 0x0000001f )
  TEST_RR_OP( 8, p.extractur, 0b00000000000000000000000000000011, 0b11111000001111000011100011001010, 0x000003fe )
  TEST_RR_OP( 9, p.extractur, 0b00000000000000000000000000000001, 0b11111000001111000011100011001010, 0x000003ff )
  TEST_RR_OP( 10, p.extractur, 0b00000000000000000000000000001010, 0b11010010100001001101101111011010, 0x4ca10476 )
  TEST_RR_OP( 11, p.extractur, 0b00000000000000000000000000001000, 0b10101111111000100111010011111000, 0x91b69060 )
  TEST_RR_OP( 12, p.extractur, 0b00000000000000000000000000111001, 0b01110011000010010101110100001001, 0x801400d9 )
  TEST_RR_OP( 13, p.extractur, 0b00000000000000000000000001110101, 0b00010001101010011111101011100110, 0x6bffa4c7 )
  TEST_RR_OP( 14, p.extractur, 0b00000000000000000000000010110000, 0b00001110000010110000111110010101, 0xec158d2c )
  TEST_RR_OP( 15, p.extractur, 0b00000000000000010111110101011101, 0b00001010111110101011101010000111, 0x5b23ae09 )
  TEST_RR_OP( 16, p.extractur, 0b00000000000000000000000000000001, 0b10001001001000000110001000111111, 0x9ddbb829 )
  TEST_RR_OP( 17, p.extractur, 0b00000000010011001100000001011011, 0b01001100110000000101101100011010, 0x2fe13b48 )
  TEST_RR_OP( 18, p.extractur, 0b00000011101111010111010001100111, 0b11101111010111010001100111111010, 0x02197fa6 )
  TEST_RR_OP( 19, p.extractur, 0b00000000001101001100011001010011, 0b11010011000110010100111011011001, 0xcbc307ea )
  

  #-------------------------------------------------------------
  # Source/Destination tests
  #-------------------------------------------------------------
  TEST_RR_SRC1_EQ_DEST( 20, p.extractur, 0b00000000001101011001100100011110, 0b11010110011001000111100100000110, 0xb2f2d7aa )
  TEST_RR_SRC1_EQ_DEST( 21, p.extractur, 0b00000000000000000000000000000000, 0b01001001001001101001001101011010, 0x8f7d0f3f )
  
  TEST_RR_SRC2_EQ_DEST( 22, p.extractur, 0b00000000000000000000000000000000, 0b01110011100110111001101011010011, 0xc64ca7df )
  TEST_RR_SRC2_EQ_DEST( 23, p.extractur, 0b00000000000000000000000011101110, 0b01110010111101110011011111001101, 0xe183d4ef )
  
  TEST_RR_SRC12_EQ_DEST( 24, p.extractur, 0b00000000000000001111101001101110, 0b01111101001101110100001100101111 )
  TEST_RR_SRC12_EQ_DEST( 25, p.extractur, 0b00000000000000000000110011101100, 0b01100111011000111100001100010011 )
  
  TEST_RR_DEST_BYPASS( 44, 0, p.extractur, 0b00000000000000000000000010110011, 0b10010110011001001011000100010101, 0x9664b115 )
  TEST_RR_DEST_BYPASS( 45, 1, p.extractur, 0b00000000000001111011101001000000, 0b00010110101001111011101001000000, 0x16a7ba40 )
  TEST_RR_DEST_BYPASS( 46, 2, p.extractur, 0b00000000000000000000000000001001, 0b10011000010010100010110100111100, 0x984a2d3c )
  TEST_RR_DEST_BYPASS( 47, 0, p.extractur, 0b00000000000000000000000000010001, 0b00010001011111110111111110111000, 0x117f7fb8 )
  TEST_RR_DEST_BYPASS( 48, 1, p.extractur, 0b00001010110010111010110111111000, 0b10101100101110101101111110000100, 0xacbadf84 )
  TEST_RR_DEST_BYPASS( 49, 2, p.extractur, 0b00000000000000000000000001001011, 0b10010111011110001111101111011001, 0x9778fbd9 )
  

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------
  TEST_RR_SRC12_BYPASS( 26, 0, 0, p.extractur, 0b00000000000000000000000011010111, 0b11010111101011101011001111010101, 0x3c9908f1 )
  TEST_RR_SRC12_BYPASS( 27, 0, 1, p.extractur, 0b00000000000000000000000110100001, 0b11001011011100001000111101000010, 0xae5ea101 )
  TEST_RR_SRC12_BYPASS( 28, 0, 2, p.extractur, 0b00000000000000000000000001100001, 0b10001111000100100110000111111101, 0xb5bde8c8 )
  TEST_RR_SRC12_BYPASS( 29, 1, 0, p.extractur, 0b00000000000101001111100011010111, 0b10100111110001101011110010001111, 0x29295ecb )
  TEST_RR_SRC12_BYPASS( 30, 1, 1, p.extractur, 0b00000001100001111010111101010101, 0b11000011110101111010101011000101, 0xdcfee347 )
  TEST_RR_SRC12_BYPASS( 31, 1, 2, p.extractur, 0b00000000000000001101010001110011, 0b11010100011100111000011011110000, 0x1b35c7b0 )
  TEST_RR_SRC12_BYPASS( 32, 2, 0, p.extractur, 0b00000000000000000000000000000001, 0b01010001011100101110000101110000, 0xe4beaffe )
  TEST_RR_SRC12_BYPASS( 33, 2, 1, p.extractur, 0b00000000001001001100111111110000, 0b00011001001001001100111111110000, 0x8d32e6c0 )
  TEST_RR_SRC12_BYPASS( 34, 2, 2, p.extractur, 0b00000000000000000000000000000010, 0b01011101110100010111101010011011, 0x7a9f359d )
  TEST_RR_SRC12_BYPASS( 35, 0, 0, p.extractur, 0b00000000000011001010001101000010, 0b01100100000011001010001101000010, 0x7ffb4300 )
  TEST_RR_SRC12_BYPASS( 36, 0, 1, p.extractur, 0b00000000000000000000010000010101, 0b10000010101101011001100100001000, 0xc65b8a95 )
  TEST_RR_SRC12_BYPASS( 37, 0, 2, p.extractur, 0b00000000000000000000000000110011, 0b01011001101101101000000011100111, 0x2d35d4b7 )
  TEST_RR_SRC12_BYPASS( 38, 1, 0, p.extractur, 0b00000000000000000001111111111000, 0b00000111111111100000101101110000, 0xafd31e0e )
  TEST_RR_SRC12_BYPASS( 39, 1, 1, p.extractur, 0b00000000000000000000000000000000, 0b00001001110111110100010101111011, 0x14a2851f )
  TEST_RR_SRC12_BYPASS( 40, 1, 2, p.extractur, 0b00000000000000000000000000001100, 0b00100000010100111100011001100000, 0x3f475883 )
  TEST_RR_SRC12_BYPASS( 41, 2, 0, p.extractur, 0b00000000000000000000101001001100, 0b00101001001100000101111010011011, 0x23b6aff2 )
  TEST_RR_SRC12_BYPASS( 42, 2, 1, p.extractur, 0b00000000000011001001010110011001, 0b11001001010110011001001101001110, 0xf183fbec )
  TEST_RR_SRC12_BYPASS( 43, 2, 2, p.extractur, 0b00000000000000000001101000111110, 0b11010001111101010111000111100110, 0x31bb8b53 )
  
  

  TEST_RR_ZEROSRC1( 50, p.extractur, 0b00000000000000000000000000000000, 0x2585a710 )
  TEST_RR_ZEROSRC1( 51, p.extractur, 0b00000000000000000000000000000000, 0x22e3e9e5 )
  
  TEST_RR_ZEROSRC2( 52, p.extractur, 0b00000000000000000000000000000000, 0b11111011000100101000000000101010 )
  TEST_RR_ZEROSRC2( 53, p.extractur, 0b00000000000000000000000000000001, 0b00011001011100000000111010010111 )
  
  TEST_RR_ZEROSRC12( 54, p.extractur, 0b00000000000000000000000000000000 )
  TEST_RR_ZEROSRC12( 55, p.extractur, 0b00000000000000000000000000000000 )
  
  TEST_RR_ZERODEST( 56, p.extractur, 0b11111011101100011010101010010001, 0b10100110100010000111101001001000 )
  TEST_RR_ZERODEST( 57, p.extractur, 0b10101010000101110010110011010000, 0b10101111101111110010100100100010 )
  
  

  TEST_PASSFAIL

# Input data section.
RVTEST_CODE_END

  .data

# Output data section.
RVTEST_DATA_BEGIN

  TEST_DATA

RVTEST_DATA_END
