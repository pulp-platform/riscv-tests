# See LICENSE for license details.

#*****************************************************************************
# p.extractr
#-----------------------------------------------------------------------------
#
# Test p.extractr instruction.
# 
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV32U
RVTEST_CODE_BEGIN

  #-------------------------------------------------------------
  # Arithmetic tests
  #-------------------------------------------------------------
  TEST_RR_OP( 2, p.extractr, 0b00000000000000000000000000000000, 0b11111000001111000011100011001010, 0x00000000 )
  TEST_RR_OP( 3, p.extractr, 0b11111111111111111111111111111111, 0b11111000001111000011100011001010, 0x00000001 )
  TEST_RR_OP( 4, p.extractr, 0b11111111111111111111111111111110, 0b11111000001111000011100011001010, 0x00000020 )
  TEST_RR_OP( 5, p.extractr, 0b11111000001111000011100011001010, 0b11111000001111000011100011001010, 0x000003e0 )
  TEST_RR_OP( 6, p.extractr, 0b11111100000111100001110001100101, 0b11111000001111000011100011001010, 0x000003e1 )
  TEST_RR_OP( 7, p.extractr, 0b11111111111111111111111111111111, 0b11111000001111000011100011001010, 0x0000001f )
  TEST_RR_OP( 8, p.extractr, 0b11111111111111111111111111111111, 0b11111000001111000011100011001010, 0x000003fe )
  TEST_RR_OP( 9, p.extractr, 0b11111111111111111111111111111111, 0b11111000001111000011100011001010, 0x000003ff )
  TEST_RR_OP( 10, p.extractr, 0b11111111111111101001011010011101, 0b11111010010110100111010110001101, 0x6b49d6ea )
  TEST_RR_OP( 11, p.extractr, 0b00000000000000000000010101010101, 0b01010101010110010110110110000110, 0x86bf7fd4 )
  TEST_RR_OP( 12, p.extractr, 0b00000000000000000000000000000001, 0b10110111000001000100011111011101, 0xd8cd1820 )
  TEST_RR_OP( 13, p.extractr, 0b00000001111001001110100101011101, 0b11101111001001110100101011101011, 0x6b858323 )
  TEST_RR_OP( 14, p.extractr, 0b11111111111111111111111111101011, 0b01111101011010101001000110010001, 0xf17d9115 )
  TEST_RR_OP( 15, p.extractr, 0b00000000000001100001101110000110, 0b00110000110111000011001100011111, 0x582bbf4b )
  TEST_RR_OP( 16, p.extractr, 0b11111111111111111111111111110101, 0b10100011010100001101011010101010, 0xcfa7d48a )
  TEST_RR_OP( 17, p.extractr, 0b11111110001001101011101001101110, 0b10110001001101011101001101110100, 0x56da9b23 )
  TEST_RR_OP( 18, p.extractr, 0b00000000000000000000000000000000, 0b00000000001110000011011100001000, 0xab66775d )
  TEST_RR_OP( 19, p.extractr, 0b00000000000000000000000011001001, 0b01100100110001010000110101111010, 0x2dcf6d97 )
  

  #-------------------------------------------------------------
  # Source/Destination tests
  #-------------------------------------------------------------
  TEST_RR_SRC1_EQ_DEST( 20, p.extractr, 0b00000000000000000000000000000011, 0b00000111100110000000011001011101, 0x56659739 )
  TEST_RR_SRC1_EQ_DEST( 21, p.extractr, 0b11111111111111111111111101001110, 0b10100111011011010110010001100011, 0xb0efef77 )
  
  TEST_RR_SRC2_EQ_DEST( 22, p.extractr, 0b00000000000000000000000000000010, 0b00001000101110101101111000101000, 0xcd472dba )
  TEST_RR_SRC2_EQ_DEST( 23, p.extractr, 0b00000000000000000000010111100100, 0b00101111001000101110001100001010, 0x6a6b96b3 )
  
  TEST_RR_SRC12_EQ_DEST( 24, p.extractr, 0b00000000000000000001000111000110, 0b00101100100011100011010110101011 )
  TEST_RR_SRC12_EQ_DEST( 25, p.extractr, 0b11111111111111111111101010010011, 0b10001111111111010100100110000111 )
  
  TEST_RR_DEST_BYPASS( 44, 0, p.extractr, 0b00000000000000000000000000000000, 0b01110001111000101111100110011111, 0x71e2f99f )
  TEST_RR_DEST_BYPASS( 45, 1, p.extractr, 0b00000000000000000000000000100100, 0b11010000000100100000000100001111, 0xd012010f )
  TEST_RR_DEST_BYPASS( 46, 2, p.extractr, 0b11111111111111111111111111111111, 0b11111010101011000001111101111100, 0xfaac1f7c )
  TEST_RR_DEST_BYPASS( 47, 0, p.extractr, 0b00000000000000000000101111101101, 0b11000111101011111011010110001010, 0xc7afb58a )
  TEST_RR_DEST_BYPASS( 48, 1, p.extractr, 0b00000000000000000000000000001001, 0b00010011111010101110001010011001, 0x13eae299 )
  TEST_RR_DEST_BYPASS( 49, 2, p.extractr, 0b11111111111111111111111111101001, 0b11010010010010101110110011111001, 0xd24aecf9 )
  

  #-------------------------------------------------------------
  # Bypassing tests
  #-------------------------------------------------------------
  TEST_RR_SRC12_BYPASS( 26, 0, 0, p.extractr, 0b11111111111111111111110000100111, 0b00011001100111111110000100111111, 0x14a321e3 )
  TEST_RR_SRC12_BYPASS( 27, 0, 1, p.extractr, 0b00000000000000000001000001100000, 0b00100000110000011100011000100000, 0x784d36d1 )
  TEST_RR_SRC12_BYPASS( 28, 0, 2, p.extractr, 0b00000000000000000000000000001110, 0b00111011011100101100101000111110, 0x32d1ce7a )
  TEST_RR_SRC12_BYPASS( 29, 1, 0, p.extractr, 0b11111111111111111111111111101011, 0b10011010110111011011111010010011, 0xf8d760d6 )
  TEST_RR_SRC12_BYPASS( 30, 1, 1, p.extractr, 0b00000000000000000000000000000101, 0b01101011110001010001000000110000, 0x98f63c70 )
  TEST_RR_SRC12_BYPASS( 31, 1, 2, p.extractr, 0b00000000000000000000000000000001, 0b00001011110101001001011011101001, 0xdf554e3b )
  TEST_RR_SRC12_BYPASS( 32, 2, 0, p.extractr, 0b00000000000000000000000000000000, 0b00000101101010011000111001101011, 0x3359d1fc )
  TEST_RR_SRC12_BYPASS( 33, 2, 1, p.extractr, 0b11111111111111111111111111111100, 0b10010101110111111100010010110101, 0xc9b2f04c )
  TEST_RR_SRC12_BYPASS( 34, 2, 2, p.extractr, 0b00000000000000000000000000000001, 0b00011010010111111001110010010111, 0xb37fc1dc )
  TEST_RR_SRC12_BYPASS( 35, 0, 0, p.extractr, 0b11111111111111111111111111111100, 0b10011100110110101000101000100111, 0x7163eebd )
  TEST_RR_SRC12_BYPASS( 36, 0, 1, p.extractr, 0b11111111111111111111111111000111, 0b10001110010011110001010111001111, 0x24e2cbb9 )
  TEST_RR_SRC12_BYPASS( 37, 0, 2, p.extractr, 0b11111111111111111111111111110101, 0b01011010111110100101101110001100, 0x23a48897 )
  TEST_RR_SRC12_BYPASS( 38, 1, 0, p.extractr, 0b11111111110011010011101101001110, 0b11001101001110110100111010000010, 0xa82dff08 )
  TEST_RR_SRC12_BYPASS( 39, 1, 1, p.extractr, 0b00000000000000000000001000100100, 0b00100010101111010001001000111011, 0xa93dad47 )
  TEST_RR_SRC12_BYPASS( 40, 1, 2, p.extractr, 0b00000000000000000000000110010101, 0b11110111100000000001100101010000, 0xc7556e24 )
  TEST_RR_SRC12_BYPASS( 41, 2, 0, p.extractr, 0b11111111111111111111111111111111, 0b11101010110111011010000011101000, 0x2b07027e )
  TEST_RR_SRC12_BYPASS( 42, 2, 1, p.extractr, 0b00000000000000000000000000000001, 0b00010000001011101110101110000000, 0xa16d4fdc )
  TEST_RR_SRC12_BYPASS( 43, 2, 2, p.extractr, 0b00000000000000000000000001000001, 0b10001000001111100111010111010011, 0x7f24b515 )
  
  

  TEST_RR_ZEROSRC1( 50, p.extractr, 0b00000000000000000000000000000000, 0x8c99f16a )
  TEST_RR_ZEROSRC1( 51, p.extractr, 0b00000000000000000000000000000000, 0x38c043b6 )
  
  TEST_RR_ZEROSRC2( 52, p.extractr, 0b11111111111111111111111111111111, 0b00011111001101111100011101100011 )
  TEST_RR_ZEROSRC2( 53, p.extractr, 0b11111111111111111111111111111111, 0b00000010011011111000010010011101 )
  
  TEST_RR_ZEROSRC12( 54, p.extractr, 0b00000000000000000000000000000000 )
  TEST_RR_ZEROSRC12( 55, p.extractr, 0b00000000000000000000000000000000 )
  
  TEST_RR_ZERODEST( 56, p.extractr, 0b11011100011101010010010111001001, 0b00100110011011101011001101111011 )
  TEST_RR_ZERODEST( 57, p.extractr, 0b01011100111100111101101000000101, 0b10100010101000000100100000100001 )
  
  

  TEST_PASSFAIL

# Input data section.
RVTEST_CODE_END

  .data

# Output data section.
RVTEST_DATA_BEGIN

  TEST_DATA

RVTEST_DATA_END
